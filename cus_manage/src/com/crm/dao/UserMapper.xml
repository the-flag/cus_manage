<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crm.dao.UserMapper">

	<!-- 用户 -->
	<!-- <resultMap type="user" id="userMap">
		<id property="user_id" column="user_id" />
		<result property="user_name" column="user_name"/>
		<result property="user_password" column="user_password"/>
		<result property="user_email" column="user_email"/>
		<result property="user_phone" column="user_phone"/>
		<result property="user_createtime" column="user_createtime"/>
		<result property="user_logintime" column="user_logintime"/>
	</resultMap> -->
	
	<!-- 模块——自定义映射 -->
	<resultMap type="module" id="moduleMap">
		<id column="module_id" property="module_id"/>
		<result column="module_name" property="module_name"/>
		<result column="module_path" property="module_path"/>
		<result column="module_weight" property="module_weight"/>
		<result column="module_parent_id" property="module_parent_id"/>
		<association property="role" resultMap="roleMap"/>
		
	</resultMap>
	<!-- 角色——自定义映射 -->
	<resultMap type="role" id="roleMap">
		<id column="role_id" property="role_id"/>
		<result column="role_name" property="role_name"/>
		<result column="role_desc" property="role_desc"/>
		<result column="role_flag" property="role_flag"/>
	</resultMap>
	<!-- 用户——自定义映射 -->
	<resultMap type="user" id="userMap">
		<id column="user_id" property="user_id"/>
		<result column="user_account" property="user_account"/>
		<result column="user_password" property="user_password"/>
		<result column="user_name" property="user_name"/>
		<result column="user_sex" property="user_sex"/>
		<result column="user_creat_time" property="user_creat_time"/>
		<result column="user_login_time" property="user_login_time"/>
		<result column="user_is_lock" property="user_is_lock"/>
		<result column="user_wrong_number" property="user_wrong_number"/>
		<result column="user_email" property="user_email"/>
		<result column="user_phone" property="user_phone"/>
		<association property="roles" resultMap="roleMap"/>
	</resultMap>
	
	
	
	
	<select id="selectUser"  resultType="user">
		SELECT user_id,user_account,user_password,user_name,user_sex,user_creat_time,user_is_lock,user_wrong_number,user_email,user_phone 
		FROM user;
	</select>
	
	<select id="selectUsersByFenYe" parameterType="fenYe" resultType="user">
		SELECT user_id,user_account,user_password,user_name,user_sex,user_creat_time,user_is_lock,user_wrong_number,user_email,user_phone 
		FROM user
		<where>
			<if test="object !=null">
				<if test="object.user_name !=null and object.user_name !='' ">
					and user_name like "%"#{object.user_name}"%"
				</if>
				<if test="object.min_creat_time !=null and object.min_creat_time !='' ">
					and user_creat_time &gt;=#{object.min_creat_time}
				</if>
				<if test="object.max_creat_time !=null and object.max_creat_time !='' ">
					and user_creat_time &lt;=#{object.max_creat_time}
				</if>
				<if test="object.user_is_lock !=null and object.user_is_lock >0 ">
					and user_is_lock=#{object.user_is_lock}
				</if>
			</if>
		</where>
		limit #{page},#{row}
	</select>
	
	<select id="selectUserCountByFenYe" parameterType="fenYe" resultType="int">
		SELECT count(user_id)
		FROM user
		<where>
			<if test="object !=null">
				<if test="object.user_name !=null and object.user_name !='' ">
					and user_name like "%"#{object.user_name}"%"
				</if>
				<if test="object.min_creat_time !=null and object.min_creat_time !='' ">
					and user_creat_time &gt;=#{object.min_creat_time};
				</if>
				<if test="object.max_creat_time !=null and object.max_creat_time !='' ">
					and user_creat_time &lt;=#{object.max_creat_time};
				</if>
				<if test="object.user_is_lock !=null and object.user_is_lock >0 ">
					and user_is_lock=#{object.user_is_lock}
				</if>
			</if>
		</where>
	</select>
	
	
	<select id="selectUserPermById" parameterType="int" resultMap="moduleMap">
		SELECT r.role_id,r.role_name,
			 m.module_id,m.module_name,m.module_path,m.module_weight,m.module_parent_id
		FROM user_role ur INNER JOIN role r ON ur.role_id=r.role_id 
			 INNER JOIN role_module rm ON r.role_id=rm.role_id 
			 INNER JOIN module m ON rm.module_id=m.module_id 
			 WHERE ur.user_id=#{user_id};
	</select>
	
	<select id="selectUserByAccount" parameterType="user" resultType="user">
		SELECT user_id,user_account,user_password,user_name,user_sex,user_creat_time,user_is_lock,user_wrong_number,user_email,user_phone 
		FROM `user` WHERE user_account=#{user_account} 
	</select>
	
	
	<select id="selectUserByUuid" parameterType="string" resultType="user">
		SELECT user_id,user_account,user_password,user_name,user_sex,user_creat_time,user_is_lock,user_wrong_number,user_email,user_phone 
		FROM `user` WHERE user_uuid=#{user_uuid} 
	</select>
	
	<update id="updateUser" parameterType="user">
		UPDATE user 
		<set>
			<!-- <if test="user_account !=null and user_account !='' ">
				user_account=#{user_account},
			</if> -->
			<if test="user_password !=null and user_password !='' ">
				user_password=#{user_password},
			</if>
			<if test="user_name !=null and user_name !='' ">
				user_name=#{user_name},
			</if>
			<if test="user_sex !=null and user_sex !='' ">
				user_sex=#{user_sex},
			</if>
			<if test="user_phone !=null and user_phone !='' ">
				user_phone=#{user_phone},
			</if>
			<if test="user_email !=null and user_email !='' ">
				user_email=#{user_email},
			</if>
			<if test="user_login_time !=null and user_login_time !='' ">
				user_login_time=#{user_login_time},
			</if>
			
			<if test="user_uuid !=null and user_uuid !='' ">
				user_uuid=#{user_uuid},
			</if>
		</set>
		WHERE user_id=#{user_id}
	</update>
	
	<update id="updateUserByAccount" parameterType="user">
		UPDATE user 
		<set>
			
			<if test="user_password !=null and user_password !='' ">
				user_password=#{user_password},
			</if>
			<if test="user_name !=null and user_name !='' ">
				user_name=#{user_name},
			</if>
			<if test="user_sex !=null and user_sex !='' ">
				user_sex=#{user_sex},
			</if>
			<if test="user_phone !=null and user_phone !='' ">
				user_phone=#{user_phone},
			</if>
			<if test="user_email !=null and user_email !='' ">
				user_email=#{user_email},
			</if>
			<if test="user_login_time !=null and user_login_time !='' ">
				user_login_time=#{user_login_time},
			</if>
			
			<if test="user_uuid !=null and user_uuid !='' ">
				user_uuid=#{user_uuid},
			</if>
		</set>
		WHERE user_account=#{user_account}
	</update>
	
	<update id="updateUserIsLockByUserId" parameterType="user">
		UPDATE user 
		<set>
			<if test="user_is_lock !=null ">
				user_is_lock=#{user_is_lock},
			</if>
		</set>
		WHERE user_id=#{user_id}
	</update>
	
	<update id="updatePasswordByUserId" parameterType="int">
		UPDATE user 
			set	user_password="76db3b18728470644ce0e469346c47454429850e87774510"
		WHERE user_id=#{user_id}
	</update>
	<insert id="insertUser" parameterType="user">
		INSERT INTO `user`(user_account,user_password,user_email,user_phone)
		select #{user_account},#{user_password},#{user_email},#{user_phone} from dual 
		where not exists (select 1 from user a where a.user_account=#{user_account})
		<selectKey resultType="int" keyProperty="user_id" order="AFTER">  
		    select @@IDENTITY as user_id;  
		</selectKey>
	</insert>
	
	<delete id="deleteUsers" parameterType="java.util.List">
		DELETE FROM `user` WHERE user_id IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}       
        </foreach>  
	</delete>

</mapper>